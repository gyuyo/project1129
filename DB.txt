DROP DATABASE IF EXISTS PROJECT;
CREATE DATABASE PROJECT;
USE PROJECT;

CREATE TABLE restaurant (
	id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT
	, regDate DATETIME NOT NULL
	, updateDate DATETIME NOT NULL
	, `name` VARCHAR(100) NOT NULL
	, cgId INT UNSIGNED NOT NULL
	, ownerId INT UNSIGNED NOT NULL UNIQUE
	, orderCount INT UNSIGNED NOT NULL DEFAULT 0
);

CREATE TABLE `member`(
	id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT
	, regDate DATETIME NOT NULL
	, updateDate DATETIME NOT NULL
	, accessId INT UNSIGNED NOT NULL
	, loginId VARCHAR(100) NOT NULL UNIQUE
	, loginPw VARCHAR(100) NOT NULL
	, `name` VARCHAR(20) NOT NULL
	, email VARCHAR(100) NOT NULL
);

CREATE TABLE category (
	id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT
	, cgName VARCHAR(20) NOT NULL
);

CREATE TABLE menu (
   id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT
   , restaurantId INT UNSIGNED NOT NULL
   , menuName VARCHAR(100) NOT NULL
   , `description` TEXT NOT NULL
   , price INT UNSIGNED NOT NULL
   , readyTime INT UNSIGNED NOT NULL
);

CREATE TABLE shoppingCart(
   id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT
   , memberId INT UNSIGNED NOT NULL
   , menuId INT UNSIGNED NOT NULL
   , quantity INT UNSIGNED NOT NULL DEFAULT 1
);

CREATE TABLE reply(
	id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT
	, regDate DATETIME NOT NULL
	, updateDate DATETIME NOT NULL
	, memberId INT UNSIGNED NOT NULL
	, restaurantId INT UNSIGNED NOT NULL
	, `body` TEXT NOT NULL
);

CREATE TABLE likePoint(
	id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT
	, memberId INT UNSIGNED NOT NULL
	, restaurantId INT UNSIGNED NOT NULL
	, `point` INT NOT NULL DEFAULT 1
);

CREATE TABLE `order`(
	id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT
	, orderMemberId INT UNSIGNED NOT NULL
	, restaurantId INT UNSIGNED NOT NULL
	, riderMemberId INT NOT NULL DEFAULT -1
	, orderStatus VARCHAR(50) NOT NULL DEFAULT '대기 중'
);

CREATE TABLE orderMenu (
	id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT
	, orderId INT UNSIGNED NOT NULL
	, menuId INT UNSIGNED NOT NULL	
	, orderNum INT UNSIGNED NOT NULL
	, quantity INT UNSIGNED NOT NULL DEFAULT 1
);

INSERT INTO category
	SET cgName = '한식';
INSERT INTO category
	SET cgName = '중식';
INSERT INTO category
	SET cgName = '양식';
INSERT INTO category
	SET cgName = '일식';
INSERT INTO category
	SET cgName = '분식';	
INSERT INTO category
	SET cgName = '패스트푸드'	;

INSERT INTO `member`
	SET regDate = NOW()
			, updateDate = NOW()
			, accessId = 1
			, loginId = 'test1'
			, loginPw = SHA2('test1', 256)
			, `name` = '유저1'
			, email = 'test1@test.com';
			
INSERT INTO `member`
	SET regDate = NOW()
			, updateDate = NOW()
			, accessId = 2
			, loginId = 'test2'
			, loginPw = SHA2('test2', 256)
			, `name` = '유저2'
			, email = 'test2@test.com';
			
INSERT INTO `member`
	SET regDate = NOW()
			, updateDate = NOW()
			, accessId = 3
			, loginId = 'test3'
			, loginPw = SHA2('test3', 256)
			, `name` = '유저3'
			, email = 'test3@test.com';

INSERT INTO restaurant
	SET regDate = NOW()
			, updateDate = NOW()
			, cgId = 1
			, `name` = '한식집'
			, ownerId = 2;

INSERT INTO menu
	SET	restaurantId = 1
			, menuName = '김치찌개'
			, `description` = '김치찌개'
			, price = 9000
			, readyTime = 30;
INSERT INTO menu
	SET	restaurantId = 1
			, menuName = '된장찌개'
			, `description` = '된장찌개'
			, price = 8000
			, readyTime = 20;
INSERT INTO menu
	SET	restaurantId = 1
			, menuName = '갈비찜'
			, `description` = '갈비찜'
			, price = 12000
			, readyTime = 40;
			
INSERT INTO reply
	SET regDate = NOW()
        , updateDate = NOW()
        , memberId = 1
        , restaurantId = 2
        , `body` = '댓글테스트1';
INSERT INTO reply
	SET regDate = NOW()
        , updateDate = NOW()
        , memberId = 1
        , restaurantId = 1
        , `body` = '댓글테스트2';
INSERT INTO reply
	SET regDate = NOW()
        , updateDate = NOW()
        , memberId = 3
        , restaurantId = 1
        , `body` = '댓글테스트3';
INSERT INTO reply
	SET regDate = NOW()
        , updateDate = NOW()
        , memberId = 2
        , restaurantId = 3
        , `body` = '댓글테스트4';	
 
INSERT INTO restaurant
(
    regDate, updateDate, cgId, `name`, memberId
)			
SELECT NOW()
        , NOW()
        , FLOOR(RAND() * 6) + 1
        , CONCAT('식당_', FLOOR(RAND() * 100000))
        , 2
    FROM restaurant;
    
    
INSERT INTO menu
(
    restaurantId , `name` , `description` , price , readyTime
)			
SELECT FLOOR(RAND() * 100) + 1
        , CONCAT('음식_', FLOOR(RAND() * 100000))
        , CONCAT('설명_', FLOOR(RAND() * 100000))
        , FLOOR(RAND() * 10000) + 1
        , FLOOR(RAND() * 20) + 1
    FROM menu;

SELECT * FROM restaurant;
SELECT * FROM `member`;
SELECT * FROM category;
SELECT * FROM menu;
SELECT * FROM shoppingCart;
SELECT * FROM reply;
SELECT * FROM likePoint;
SELECT * FROM `order`;
SELECT * FROM orderMenu;

DELETE FROM `order`;
DELETE FROM orderMenu;

INSERT `order`
	SET orderMemberId = 1
			, restaurantId = 1;

INSERT orderMenu
	SET orderId = 1
			, MenuId = 1
			, orderNum = 9
			, quantity = 1;

INSERT orderMenu
	SET orderId = 1
			, MenuId = 1
			, orderNum = 6
			, quantity = 2;
SELECT *
				FROM `order`
				WHERE orderMemberId	= 1
				
SELECT *, SUM(om.quantity) AS quantity, SUM(m.price * om.quantity) AS totalPrice
				FROM orderMenu AS om
				INNER JOIN menu AS m
				ON om.menuId = m.id
				INNER JOIN `order` AS o
				ON om.orderNUm = o.id
				INNER JOIN restaurant AS r
				ON o.restaurantId = r.id
				WHERE r.ownerId = 2
				GROUP BY o.id
				ORDER BY o.id DESC
				
SELECT *, SUM(om.quantity) AS quantity, SUM(m.price * om.quantity) AS totalPrice
				FROM orderMenu AS om
				INNER JOIN menu AS m
				ON om.menuId = m.id
				INNER JOIN `order` AS o
				ON om.orderNUm = o.id
				INNER JOIN restaurant AS r
				ON o.restaurantId = r.id
				WHERE (o.riderMemberId = -1 AND o.orderStatus = '픽업 대기중')
				OR (o.riderMemberId = 3)
				GROUP BY o.id
				ORDER BY o.id DESC
				